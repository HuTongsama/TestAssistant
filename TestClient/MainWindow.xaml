<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i ="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:TestClient"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="TestClient.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="768" Width="1024">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style x:Key="ListItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Content" Value="{Binding ItemName}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding UseCustomerRightClick}" Value="true">
                                <Setter Property="local:ListItemAttachedBehaviour.MouseRightClickCommand" Value="{Binding MouseRightClickCommand}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UseCustomerLeftClick}" Value="true">
                                <Setter Property="local:ListItemAttachedBehaviour.MouseLeftClickCommand" Value="{Binding MouseLeftClickCommand}"/>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </DataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TabGridTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="260*"/>
                    <ColumnDefinition Width="120*"/>
                    <ColumnDefinition Width="250*"/>
                    <ColumnDefinition Width="350"/>
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Center" Height="400" Margin="0,10,0,10" VerticalAlignment="Top" Width="258" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <ListView ItemsSource="{Binding KeyToCheckState}" Grid.Column="1">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Content="{Binding StateKey}" IsChecked="{Binding State}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListBox ItemsSource="{Binding PictureSetList}" ItemContainerStyle="{StaticResource ListItemStyle}"
                                             SelectionMode="Multiple"/>

                </Grid>
                <ListBox ItemsSource="{Binding SelectedPicList}" ItemContainerStyle="{StaticResource ListItemStyle}" SelectionMode="Multiple"
                                         HorizontalAlignment="Center" Height="400" Margin="0,10,0,10" VerticalAlignment="Top" Width="120" Grid.Column="1"/>
                <Grid Height="400" Width="250" Margin="0,10,0,10" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <Label Content="默认模板" Margin="0,25,0,25" Grid.Row="0" Grid.Column="0"/>
                    <ComboBox ItemsSource="{Binding TemplateSetList}" SelectedItem="{Binding SelectedDefaultTemplate}" 
                              Margin="0,25,0,25" Grid.Row="0" Grid.Column="1">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ItemName}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <Label Content="读图方式" Margin="0,25,0,25" Grid.Row="1" Grid.Column="0"/>
                    <ComboBox ItemsSource="{Binding DecodeTypeList}" SelectedItem="{Binding SelectedDecodeType}" 
                              Margin="0,25,0,25" Grid.Row="1" Grid.Column="1">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ItemName}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <Label Content="x86DllPath" Margin="0,25,0,25" Grid.Row="2" Grid.Column="0"/>
                    <TextBox Text="{Binding X86Path}" Margin="0,25,0,25" Grid.Row="2" Grid.Column="1"/>
                    <Button Content=".." Command="{Binding X86PathButtonCommand ,UpdateSourceTrigger=PropertyChanged}" Margin="0,25,0,25" Grid.Row="2" Grid.Column="2"/>

                    <Label Content="x64DllPath" Margin="0,25,0,25" Grid.Row="3" Grid.Column="0"/>
                    <TextBox Text="{Binding X64Path, UpdateSourceTrigger=PropertyChanged}" Margin="0,25,0,25" Grid.Row="3" Grid.Column="1"/>
                    <Button Content=".." Command="{Binding X64PathButtonCommand}" Margin="0,25,0,25" Grid.Row="3" Grid.Column="2"/>

                    <Label Content="额外后缀" Margin="0,25,0,25" Grid.Row="4" Grid.Column="0"/>
                    <TextBox Text="{Binding ExtraSuffix, UpdateSourceTrigger=PropertyChanged}" Margin="0,25,0,25" Grid.Row="4" Grid.Column="1"/>
                </Grid>
                <Grid Height="400" Width="350" Margin="0,10,0,10" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="8*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Label Content="测试版本" Margin="5,5,5,5" Grid.Column="0" Grid.Row="0"></Label>
                    <ListBox ItemsSource="{Binding TestVersionList}" SelectedItem="{Binding SelectedTestVersion}" ItemContainerStyle="{StaticResource ListItemStyle}" 
                              Margin="5,5,5,5" Grid.Column="0" Grid.Row="1">

                    </ListBox>
                    <Button Content="加入标准" Command="{Binding AddStandardCommand}" Margin="5,5,5,5" Grid.Column="0" Grid.Row="2"></Button>

                    <Label Content="标准版本" Margin="5,5,5,5" Grid.Column="1" Grid.Row="0"></Label>
                    <ListBox ItemsSource="{Binding StandardVersionList}" SelectedItem="{Binding SelectedStandardVersion}" ItemContainerStyle="{StaticResource ListItemStyle}" Margin="5,5,5,5" Grid.Column="1" Grid.Row="1"></ListBox>
                    <Button Content="移除标准" Command="{Binding RemoveStandardCommand}" Margin="5,5,5,5" Grid.Column="1" Grid.Row="2"></Button>
                </Grid>
            </Grid>
        </ControlTemplate>
        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Header" Value="{Binding Header}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Header}" Value="DBR">
                    <Setter Property="Content">
                        <Setter.Value>
                            <ContentControl Template="{StaticResource TabGridTemplate}"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Header}" Value="DLR">
                    <Setter Property="Content">
                        <Setter.Value>
                            <ContentControl Template="{StaticResource TabGridTemplate}"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Header}" Value="DCN">
                    <Setter Property="Content">
                        <Setter.Value>
                            <ContentControl Template="{StaticResource TabGridTemplate}"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="383*"/>
            <ColumnDefinition Width="409*"/>
        </Grid.ColumnDefinitions>
        <TabControl ItemsSource="{Binding TabItems.Values}" ItemContainerStyle="{StaticResource TabItemStyle}" SelectedItem="{Binding SelectedItem}" 
                    HorizontalAlignment="Left" Height="451" Margin="10,10,0,0" VerticalAlignment="Top" Width="996" Grid.ColumnSpan="2"/>
        <Button Content="稳定性测试" Command="{Binding StabilityButtonCommand}" Grid.Column="1" HorizontalAlignment="Left" Margin="388,592,0,0" VerticalAlignment="Top" Width="75"/>
        <Button Content="性能测试" Command="{Binding PerformanceButtonCommand}" Grid.Column="1" HorizontalAlignment="Left" Margin="388,506,0,0" VerticalAlignment="Top" Width="75"/>
        <Button Content="比较" Command="{Binding CompareButtonCommand}" Grid.Column="1" HorizontalAlignment="Left" Margin="388,682,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="2.693,0.474"/>
        <ScrollViewer HorizontalAlignment="Left" Height="195" Margin="10,506,0,0" VerticalAlignment="Top" Width="378">
            <TextBlock Text="{Binding ViewMessage}"/>
        </ScrollViewer>
        <ListBox ItemsSource="{Binding ServerTestList}" ItemContainerStyle="{StaticResource ListItemStyle}" HorizontalAlignment="Left" Height="195" Margin="405,506,0,0" VerticalAlignment="Top" Width="189" Grid.ColumnSpan="2"/>
        <ListBox ItemsSource="{Binding ServerCompareList}" ItemContainerStyle="{StaticResource ListItemStyle}" HorizontalAlignment="Left" Height="195" Margin="132,506,0,0" VerticalAlignment="Top" Width="189" Grid.Column="1"/>
        <Label Content="MessageConsole" HorizontalAlignment="Left" Margin="10,476,0,0" VerticalAlignment="Top" Width="106"/>
        <Label Content="测试等待队列" HorizontalAlignment="Left" Margin="405,476,0,0" VerticalAlignment="Top" Width="86"/>
        <Label Content="比较等待队列" Grid.Column="1" HorizontalAlignment="Left" Margin="132,476,0,0" VerticalAlignment="Top" Width="83"/>
    </Grid>
</Window>
